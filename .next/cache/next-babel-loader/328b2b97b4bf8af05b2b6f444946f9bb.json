{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Nav from '../components/Nav';\nimport Cart from '../components/Cart';\nimport ItemList from '../components/ItemList';\nimport ITEMS_DB from '../js/constants';\n\nconst Index = () => {\n  const {\n    0: shoppingCart,\n    1: setShoppingCart\n  } = useState([]);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(shoppingCart.length == 0 ? \"0.00\" : shoppingCart.map(e => e.price * e.ud).reduce((e, acc) => e + acc).toFixed(2));\n  useEffect(() => {\n    const totalItems = document.getElementById(\"cart-count\");\n    const priceCart = document.getElementById(\"totalPrice\");\n    document.title = \"Amazon.fake\";\n    totalItems.innerHTML = shoppingCart.length;\n    totalItems.style.left = shoppingCart.length > 9 ? `21px` : `25px`;\n    setTotalPrice(shoppingCart.length == 0 ? \"0.00\" : shoppingCart.map(e => e.price * e.ud).reduce((e, acc) => e + acc).toFixed(2));\n    priceCart.innerHTML = `Total a pagar: ${totalPrice}â‚¬`;\n  });\n\n  const setUnitItem = (id, ud) => {\n    const NEW_CART = [...shoppingCart];\n    NEW_CART.find(e => e.id == id).ud = ud;\n    setShoppingCart(NEW_CART);\n  };\n\n  const deleteItem = id => {\n    const ITEM = ITEMS_DB.find(e => e.id == id);\n    setShoppingCart(shoppingCart.filter(e => e.id !== id));\n    ITEM.ud = 1;\n    ITEM.intoCart = false;\n  };\n\n  const emptyCart = () => {\n    shoppingCart.map(e => deleteItem(e.id));\n    setShoppingCart([]);\n  };\n\n  const addItem = item => {\n    const NEW_CART = [...shoppingCart];\n    NEW_CART.push(ITEMS_DB.find(e => e.id == item.id));\n    ITEMS_DB.find(e => e.id == item.id).intoCart = true;\n    setShoppingCart(NEW_CART);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(Nav, null), __jsx(Cart, {\n    cart: shoppingCart,\n    deleteItem: deleteItem,\n    setUnitItem: setUnitItem,\n    emptyCart: emptyCart\n  })), __jsx(\"div\", {\n    className: \"main-container scroll\"\n  }, __jsx(\"div\", {\n    className: \"container-list\"\n  }, ITEMS_DB.map(e => __jsx(ItemList, {\n    db: ITEMS_DB,\n    item: e,\n    key: e.id,\n    id: e.id,\n    addItem: addItem\n  })))));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}